version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo
# test

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - cp settings.xml ~/.m2/
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain cdlib-uc3-mrt --domain-owner $AWS_ACCOUNT_ID --region $AWS_REGION --query authorizationToken --output text`
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}

    - COMMIT=`git rev-parse --short HEAD`
    - BRANCH=`git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || echo ''`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
    - DOCKTAG=$BRANCHTAG
    - COMMITDATE=`git --no-pager log -1 --pretty='format:%cd' --date='format:%Y-%m-%d %H:%M:%S'`
    - echo "Branchtag ${BRANCHTAG}; COMMITDATE=${COMMITDATE}"

  build:
    on-failure: ABORT
    commands:
    # - mvn -ntp clean install -Ddocker.skip -DskipITs -Dmaven.test.skip=true
    - mvn -ntp clean install
    - |
      if [[ "${BRANCHTAG}" == "main" ]]
      then
        SEMVER=''
        DOCKTAG='dev'
      elif [[ "${BRANCHTAG}" == "codebuild" ]]
      then
        SEMVER=''
        DOCKTAG='dev'
      elif [[ "${TAG}" == "" ]]
      then
        SEMVER="-Dversion=${BRANCHTAG}-SNAPSHOT"
      else
        SEMVER="-Dversion=${BRANCHTAG}"
      fi
    - echo "Semver [${SEMVER}]"
    - mvn -ntp deploy:deploy-file -Durl=${CODEARTIFACT_URL} -DrepositoryId=cdlib-uc3-mrt-uc3-mrt-java -Dfile=$(ls replication-war/target/mrt-replicationwar-*.war) ${SEMVER}

    - |
        docker build --push --quiet \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        --build-arg COMMITDATE="${COMMITDATE}" \
        -t ${ECR_REGISTRY}/mrt-replic:${DOCKTAG} .
